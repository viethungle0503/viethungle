"use strict";(self.webpackChunkviethungle_0503=self.webpackChunkviethungle_0503||[]).push([[6778],{5794:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"tutorials/nginx-proxy-manager-symlink-fix-en","title":"Fixing Nginx Proxy Manager Symlinks After Manual Backup","description":"When you backup Nginx Proxy Manager by manually copying directories, Let\'s Encrypt symlinks can be broken, leading to SSL certificate renewal errors. This guide will help you fix this issue.","source":"@site/docs/tutorials/nginx-proxy-manager-symlink-fix-en.md","sourceDirName":"tutorials","slug":"/tutorials/nginx-proxy-manager-symlink-fix-en","permalink":"/viethungle/docs/tutorials/nginx-proxy-manager-symlink-fix-en","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/nginx-proxy-manager-symlink-fix-en.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Kh\u1eafc Ph\u1ee5c Symlink Nginx Proxy Manager Sau Backup Th\u1ee7 C\xf4ng","permalink":"/viethungle/docs/tutorials/nginx-proxy-manager-symlink-fix"},"next":{"title":"Thunderbird - Hi\u1ec3n Th\u1ecb Email Sent Trong C\xf9ng Thread","permalink":"/viethungle/docs/tutorials/thunderbird-sent-thread-integration"}}');var t=r(4848),s=r(8453);const l={sidebar_position:4},c="Fixing Nginx Proxy Manager Symlinks After Manual Backup",a={},o=[{value:"1. Understanding the Problem",id:"1-understanding-the-problem",level:2},{value:"1.1. Root Cause",id:"11-root-cause",level:3},{value:"1.2. Common Error Messages",id:"12-common-error-messages",level:3},{value:"2. Checking Current Status",id:"2-checking-current-status",level:2},{value:"2.1. Identify Volume Path",id:"21-identify-volume-path",level:3},{value:"2.2. Check Directory Structure",id:"22-check-directory-structure",level:3},{value:"2.3. Identify Broken Certificates",id:"23-identify-broken-certificates",level:3},{value:"3. Fixing Symlinks",id:"3-fixing-symlinks",level:2},{value:"3.1. Method 1: Recreate Relative Symlinks (Recommended)",id:"31-method-1-recreate-relative-symlinks-recommended",level:3},{value:"3.1.1. Step 1: Navigate to Live Directory",id:"311-step-1-navigate-to-live-directory",level:4},{value:"3.1.2. Step 2: Remove Old Files/Symlinks",id:"312-step-2-remove-old-filessymlinks",level:4},{value:"3.1.3. Step 3: Determine Certificate Version Number",id:"313-step-3-determine-certificate-version-number",level:4},{value:"3.1.4. Step 4: Create Relative Symlinks",id:"314-step-4-create-relative-symlinks",level:4},{value:"3.1.5. Step 5: Verify Symlinks",id:"315-step-5-verify-symlinks",level:4},{value:"3.2. Method 2: Automated Script",id:"32-method-2-automated-script",level:3},{value:"4. Restart Container",id:"4-restart-container",level:2},{value:"5. Verify Results",id:"5-verify-results",level:2},{value:"5.1. Check Logs",id:"51-check-logs",level:3},{value:"5.2. Test Certificate Renewal",id:"52-test-certificate-renewal",level:3},{value:"5.3. Check NPM Interface",id:"53-check-npm-interface",level:3},{value:"6. Preventing Future Issues",id:"6-preventing-future-issues",level:2},{value:"6.1. Use Docker Volume Backup",id:"61-use-docker-volume-backup",level:3},{value:"6.2. Use Rsync with Symlink Preservation",id:"62-use-rsync-with-symlink-preservation",level:3},{value:"6.3. Create Automated Backup Script",id:"63-create-automated-backup-script",level:3},{value:"7. Troubleshooting",id:"7-troubleshooting",level:2},{value:"7.1. Error: &quot;target does not exist&quot;",id:"71-error-target-does-not-exist",level:3},{value:"7.2. Archive Files Not Found",id:"72-archive-files-not-found",level:3},{value:"7.3. Multiple Certificates",id:"73-multiple-certificates",level:3},{value:"8. Conclusion",id:"8-conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"fixing-nginx-proxy-manager-symlinks-after-manual-backup",children:"Fixing Nginx Proxy Manager Symlinks After Manual Backup"})}),"\n",(0,t.jsx)(n.p,{children:"When you backup Nginx Proxy Manager by manually copying directories, Let's Encrypt symlinks can be broken, leading to SSL certificate renewal errors. This guide will help you fix this issue."}),"\n",(0,t.jsx)(n.h2,{id:"1-understanding-the-problem",children:"1. Understanding the Problem"}),"\n",(0,t.jsx)(n.h3,{id:"11-root-cause",children:"1.1. Root Cause"}),"\n",(0,t.jsx)(n.p,{children:"Manual backup through copy/paste operations can break Let's Encrypt symbolic links (symlinks). These symlinks are crucial because:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["They link files in ",(0,t.jsx)(n.code,{children:"/etc/letsencrypt/live/"})," with actual files in ",(0,t.jsx)(n.code,{children:"/etc/letsencrypt/archive/"})]}),"\n",(0,t.jsx)(n.li,{children:"Certbot needs these symlinks to manage and renew certificates"}),"\n",(0,t.jsx)(n.li,{children:"Without symlinks, Certbot cannot find certificates for renewal"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"12-common-error-messages",children:"1.2. Common Error Messages"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\r\n    "error": {\r\n        "message": "Internal Error"\r\n    },\r\n    "debug": {\r\n        "stack": [\r\n            "Renewal configuration file /etc/letsencrypt/renewal/npm-2.conf is broken.",\r\n            "The error was: expected /etc/letsencrypt/live/npm-2/cert.pem to be a symlink",\r\n            "Skipping."\r\n        ]\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"2-checking-current-status",children:"2. Checking Current Status"}),"\n",(0,t.jsx)(n.h3,{id:"21-identify-volume-path",children:"2.1. Identify Volume Path"}),"\n",(0,t.jsx)(n.p,{children:"First, determine the Nginx Proxy Manager volume path on the host:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'docker inspect <container_name> | grep -A 5 -B 5 "letsencrypt"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Or check in your ",(0,t.jsx)(n.code,{children:"docker-compose.yml"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"volumes:\r\n  - /home/ubuntu/nginxproxymanager/letsencrypt:/etc/letsencrypt\n"})}),"\n",(0,t.jsx)(n.h3,{id:"22-check-directory-structure",children:"2.2. Check Directory Structure"}),"\n",(0,t.jsx)(n.p,{children:"Check the live directory:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls -la /home/ubuntu/nginxproxymanager/letsencrypt/live/npm-2/\n"})}),"\n",(0,t.jsx)(n.p,{children:"Check the archive directory:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls -la /home/ubuntu/nginxproxymanager/letsencrypt/archive/npm-2/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"23-identify-broken-certificates",children:"2.3. Identify Broken Certificates"}),"\n",(0,t.jsx)(n.p,{children:"List all certificates:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls /home/ubuntu/nginxproxymanager/letsencrypt/live/\n"})}),"\n",(0,t.jsx)(n.h2,{id:"3-fixing-symlinks",children:"3. Fixing Symlinks"}),"\n",(0,t.jsx)(n.h3,{id:"31-method-1-recreate-relative-symlinks-recommended",children:"3.1. Method 1: Recreate Relative Symlinks (Recommended)"}),"\n",(0,t.jsx)(n.h4,{id:"311-step-1-navigate-to-live-directory",children:"3.1.1. Step 1: Navigate to Live Directory"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd /home/ubuntu/nginxproxymanager/letsencrypt/live/npm-2\n"})}),"\n",(0,t.jsx)(n.h4,{id:"312-step-2-remove-old-filessymlinks",children:"3.1.2. Step 2: Remove Old Files/Symlinks"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo rm -f cert.pem privkey.pem chain.pem fullchain.pem\n"})}),"\n",(0,t.jsx)(n.h4,{id:"313-step-3-determine-certificate-version-number",children:"3.1.3. Step 3: Determine Certificate Version Number"}),"\n",(0,t.jsx)(n.p,{children:"Check the archive directory to identify the latest version number:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls -la ../../archive/npm-2/\n"})}),"\n",(0,t.jsx)(n.p,{children:"You will see files like:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"cert1.pem"}),", ",(0,t.jsx)(n.code,{children:"cert2.pem"}),", ..."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"privkey1.pem"}),", ",(0,t.jsx)(n.code,{children:"privkey2.pem"}),", ..."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"chain1.pem"}),", ",(0,t.jsx)(n.code,{children:"chain2.pem"}),", ..."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fullchain1.pem"}),", ",(0,t.jsx)(n.code,{children:"fullchain2.pem"}),", ..."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"314-step-4-create-relative-symlinks",children:"3.1.4. Step 4: Create Relative Symlinks"}),"\n",(0,t.jsxs)(n.p,{children:["Use the highest version number (example: ",(0,t.jsx)(n.code,{children:"1"}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo ln -sf ../../archive/npm-2/cert1.pem cert.pem\r\nsudo ln -sf ../../archive/npm-2/privkey1.pem privkey.pem  \r\nsudo ln -sf ../../archive/npm-2/chain1.pem chain.pem\r\nsudo ln -sf ../../archive/npm-2/fullchain1.pem fullchain.pem\n"})}),"\n",(0,t.jsx)(n.h4,{id:"315-step-5-verify-symlinks",children:"3.1.5. Step 5: Verify Symlinks"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ls -la\n"})}),"\n",(0,t.jsx)(n.p,{children:"Expected result:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cert.pem -> ../../archive/npm-2/cert1.pem\r\nprivkey.pem -> ../../archive/npm-2/privkey1.pem\r\nchain.pem -> ../../archive/npm-2/chain1.pem\r\nfullchain.pem -> ../../archive/npm-2/fullchain1.pem\n"})}),"\n",(0,t.jsx)(n.h3,{id:"32-method-2-automated-script",children:"3.2. Method 2: Automated Script"}),"\n",(0,t.jsx)(n.p,{children:"Create a script to automatically fix multiple certificates:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\r\n\r\n# Path to letsencrypt directory\r\nLETSENCRYPT_PATH="/home/ubuntu/nginxproxymanager/letsencrypt"\r\n\r\n# Find all certificates\r\nfor cert_dir in "$LETSENCRYPT_PATH/live"/*; do\r\n    if [ -d "$cert_dir" ]; then\r\n        cert_name=$(basename "$cert_dir")\r\n        echo "Processing certificate: $cert_name"\r\n        \r\n        # Navigate to live directory\r\n        cd "$cert_dir"\r\n        \r\n        # Remove old symlinks/files\r\n        sudo rm -f cert.pem privkey.pem chain.pem fullchain.pem\r\n        \r\n        # Find latest version\r\n        latest_num=$(ls ../../archive/"$cert_name"/cert*.pem | grep -o \'[0-9]\\+\' | sort -n | tail -1)\r\n        \r\n        # Create new symlinks\r\n        sudo ln -sf "../../archive/$cert_name/cert${latest_num}.pem" cert.pem\r\n        sudo ln -sf "../../archive/$cert_name/privkey${latest_num}.pem" privkey.pem\r\n        sudo ln -sf "../../archive/$cert_name/chain${latest_num}.pem" chain.pem\r\n        sudo ln -sf "../../archive/$cert_name/fullchain${latest_num}.pem" fullchain.pem\r\n        \r\n        echo "Completed $cert_name"\r\n    fi\r\ndone\n'})}),"\n",(0,t.jsx)(n.h2,{id:"4-restart-container",children:"4. Restart Container"}),"\n",(0,t.jsx)(n.p,{children:"After fixing symlinks, restart the container:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# With Docker Compose\r\ndocker-compose restart nginx-proxy-manager\r\n\r\n# With regular Docker\r\ndocker restart <container_name>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"5-verify-results",children:"5. Verify Results"}),"\n",(0,t.jsx)(n.h3,{id:"51-check-logs",children:"5.1. Check Logs"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker logs <container_name>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"52-test-certificate-renewal",children:"5.2. Test Certificate Renewal"}),"\n",(0,t.jsx)(n.p,{children:"Enter the container and test:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker exec -it <container_name> bash\r\ncertbot renew --dry-run -v\n"})}),"\n",(0,t.jsx)(n.h3,{id:"53-check-npm-interface",children:"5.3. Check NPM Interface"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Log into Nginx Proxy Manager"}),"\n",(0,t.jsx)(n.li,{children:"Check SSL Certificates"}),"\n",(0,t.jsx)(n.li,{children:"Try force renewing a certificate"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"6-preventing-future-issues",children:"6. Preventing Future Issues"}),"\n",(0,t.jsx)(n.h3,{id:"61-use-docker-volume-backup",children:"6.1. Use Docker Volume Backup"}),"\n",(0,t.jsx)(n.p,{children:"Instead of manual copying, use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Backup volume\r\ndocker run --rm -v nginx-proxy-manager_letsencrypt:/source -v $(pwd):/backup alpine tar czf /backup/letsencrypt-backup.tar.gz -C /source .\r\n\r\n# Restore volume\r\ndocker run --rm -v nginx-proxy-manager_letsencrypt:/target -v $(pwd):/backup alpine tar xzf /backup/letsencrypt-backup.tar.gz -C /target\n"})}),"\n",(0,t.jsx)(n.h3,{id:"62-use-rsync-with-symlink-preservation",children:"6.2. Use Rsync with Symlink Preservation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"rsync -avh --links /source/nginxproxymanager/ /backup/nginxproxymanager/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"63-create-automated-backup-script",children:"6.3. Create Automated Backup Script"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\r\n\r\nBACKUP_DIR="/backup/npm-$(date +%Y%m%d-%H%M%S)"\r\nSOURCE_DIR="/home/ubuntu/nginxproxymanager"\r\n\r\nmkdir -p "$BACKUP_DIR"\r\n\r\n# Backup with preserved symlinks\r\nrsync -avh --links "$SOURCE_DIR/" "$BACKUP_DIR/"\r\n\r\necho "Backup completed: $BACKUP_DIR"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"7-troubleshooting",children:"7. Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"71-error-target-does-not-exist",children:'7.1. Error: "target does not exist"'}),"\n",(0,t.jsx)(n.p,{children:"If you see this error, it means you created absolute symlinks instead of relative ones:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# WRONG - absolute symlink\r\nsudo ln -sf /home/ubuntu/nginxproxymanager/letsencrypt/archive/npm-2/cert1.pem cert.pem\r\n\r\n# CORRECT - relative symlink  \r\nsudo ln -sf ../../archive/npm-2/cert1.pem cert.pem\n"})}),"\n",(0,t.jsx)(n.h3,{id:"72-archive-files-not-found",children:"7.2. Archive Files Not Found"}),"\n",(0,t.jsx)(n.p,{children:"If there are no files in the archive, the certificate may be completely lost:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Delete the old certificate:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker exec -it <container_name> certbot delete --cert-name npm-2\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Create a new certificate through NPM interface"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"73-multiple-certificates",children:"7.3. Multiple Certificates"}),"\n",(0,t.jsx)(n.p,{children:"For multiple certificates (npm-2, npm-4, ...):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'for cert in npm-2 npm-4; do\r\n    echo "Processing $cert..."\r\n    cd "/home/ubuntu/nginxproxymanager/letsencrypt/live/$cert"\r\n    sudo rm -f *.pem\r\n    latest=$(ls ../../archive/$cert/cert*.pem | grep -o \'[0-9]\\+\' | sort -n | tail -1)\r\n    sudo ln -sf "../../archive/$cert/cert${latest}.pem" cert.pem\r\n    sudo ln -sf "../../archive/$cert/privkey${latest}.pem" privkey.pem\r\n    sudo ln -sf "../../archive/$cert/chain${latest}.pem" chain.pem\r\n    sudo ln -sf "../../archive/$cert/fullchain${latest}.pem" fullchain.pem\r\ndone\n'})}),"\n",(0,t.jsx)(n.h2,{id:"8-conclusion",children:"8. Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"Fixing symlinks after manual backup is essential to ensure Nginx Proxy Manager functions properly. Remember:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Always use relative symlinks, not absolute ones"}),"\n",(0,t.jsx)(n.li,{children:"Identify the correct latest certificate version number"}),"\n",(0,t.jsx)(n.li,{children:"Restart the container after fixing"}),"\n",(0,t.jsx)(n.li,{children:"Use proper backup methods to avoid this issue"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In the future, consider using specialized backup tools or Docker volume backup to ensure data integrity."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var i=r(6540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);